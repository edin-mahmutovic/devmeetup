apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus-kube
  namespace: banking-api
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus-kube
  namespace: banking-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-kube
subjects:
  - kind: ServiceAccount
    name: default
    namespace: my-namespace
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: banking-api
  labels:
    k8s-app: metrics-service
data:
  prometheus.yml: |-
    scrape_configs:
      - job_name: 'kubernetes-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: banking-api
  labels:
    k8s-app: prometheus-service
spec:
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  selector:
    k8s-app: prometheus-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-service
  namespace: banking-api
  labels:
    k8s-app: prometheus-service
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: prometheus-service
  template:
    metadata:
      name: prometheus-service
      labels:
        k8s-app: prometheus-service
    spec:
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
      containers:
        - name: prometheus
          image: prom/prometheus
          imagePullPolicy: Always
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus
          args: ["--config.file=/etc/prometheus/prometheus.yml"]
      restartPolicy: Always
      dnsPolicy: ClusterFirst